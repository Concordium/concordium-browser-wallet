@mixin when-invalid {
    &--invalid {
        @content;
    }
}

@mixin when-valid {
    &--valid {
        @content;
    }
}

.form-input {
    position: relative;
    display: block;

    &__field {
        background-color: $color-input-bg;
        font-size: rem(10px);
        color: $color-text;
        height: rem(32px);
        border: rem(1px) solid $color-grey;
        border-radius: rem(5px);
        padding: rem(12px) rem(5px) rem(5px);
        width: 100%;
        outline: none;
        @include transition(border-color);

        &:focus {
            border-color: $color-blue;
        }
    }

    &__area {
        background-color: $color-input-bg;
        font-size: rem(10px);
        color: $color-text;
        border: rem(1px) solid $color-grey;
        border-radius: rem(5px);
        padding: rem(12px) rem(5px) rem(5px);
        height: 100%;
        width: 100%;
        outline: none;
        @include transition(border-color);

        &:focus {
            border-color: $color-blue;
        }
    }

    &__checkbox {
        display: flex;
        flex-direction: row;

        label {
            margin-top: auto;
            margin-bottom: auto;
        }

        input {
            width: rem(20px);
            height: rem(20px);
            background-color: $color-input-bg;
            accent-color: $color-cta-mainnet;
        }
    }

    &__label {
        font-size: rem(8px);
        color: $color-text;
        font-weight: $font-weight-light;
        position: absolute;
        left: rem(6px);
        top: rem(4px);

        input:-internal-autofill-selected + & {
            color: $color-text-light;
        }
    }

    @include when-valid {
        .form-input__field:where(:focus) {
            border-color: $color-success;
        }
    }

    @include when-invalid {
        .form-input__field {
            border-color: $color-error;
        }
    }

    &--read-only .form-input__field {
        background-color: $color-disabled-input-bg;
        cursor: default;
        border-color: $color-grey;
    }

    &__note,
    &__error {
        position: relative;
        left: rem(6px);
        font-size: rem(8px);
        margin-top: rem(4px);
    }

    &__note {
        color: grey;
    }
}

.form-inline-input {
    appearance: textfield;
    border: none;
    padding: 0;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    font-weight: inherit;
    line-height: inherit;
    background: none;

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
        appearance: none;
        margin: 0;
    }

    &:focus {
        outline: none;
    }

    &:disabled {
        color: $color-grey;
    }

    &:read-only {
        color: inherit;
    }

    @include when-invalid {
        color: $color-error;
    }
}

.form-password {
    position: relative;

    &__reveal {
        position: absolute;
        top: rem(16px);
        right: rem(10px);
        transform: translateY(-50%);
        background-color: transparent;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;

        svg {
            width: rem(15px);

            g,
            path {
                fill: $color-text;
            }
        }
    }
}

.form-error-message {
    color: $color-error;
}

$switch-height: rem(18px);
$switch-width: rem(35px);
$switch-transition: linear 0.05s;
$handle-size: $switch-height;
$handle-scale: scale(1.02);

.form-toggle {
    &__root {
        position: relative;
        display: flex;
        align-items: center;

        input {
            // Hide input.
            position: absolute;
            opacity: 0;
            width: 0;
            height: 0;
        }
    }

    &__switch {
        cursor: pointer;
        position: relative;
        width: $switch-width;
        height: $switch-height;
        border-radius: calc($switch-height / 2);
    }

    &__track {
        &,
        &::before {
            width: 100%;
            height: 100%;
            border-radius: calc($switch-height / 2);
        }

        border: 1px solid $color-grey;
        overflow: hidden;
        transition: border-color 0.1s ease-out;

        &::before {
            content: '';
            display: block;
            background-color: $color-off-black;
            transform: translateX(calc(-100% + (#{$switch-height} - 1px)));
            transition: transform $switch-transition;

            input:checked + & {
                transform: translateX(0);
            }
        }
    }

    &__handle {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: $color-off-white;
        width: $handle-size;
        height: $handle-size;
        border-radius: 50%;
        position: absolute;
        left: 0;
        top: 0;
        transform: translate(0, 0) $handle-scale;
        box-shadow: 0 0 rem(2px) $color-grey;
        transition: transform $switch-transition;

        input:checked ~ & {
            transform: translate(calc($switch-width - $handle-size), 0) $handle-scale;
        }

        > * {
            max-width: 75%;
            max-height: 75%;
        }
    }
}

.form-amount-input {
    position: relative;

    &__field {
        display: flex;
        align-content: center;
    }

    &__symbol {
        margin-bottom: 0;
        margin-top: rem(1px);
        margin-right: rem(2px);
    }

    &__max {
        position: absolute;
        right: rem(5px);
        top: 50%;
        transform: translateY(-50%);
        font-size: rem(8px) !important;
        height: rem(15px) !important;
        min-height: rem(15px) !important;
        padding: 0 rem(5px) !important;
    }
}
